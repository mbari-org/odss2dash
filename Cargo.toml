[package]
name = "odss2dash"
version = "2.4.4"
authors = [
    "Carlos A. Rueda <carueda@mbari.org>",
]
description = """
The `odss2dash` service periodically retrieves the latest positions of
specified assets from the MBARI Tracking DB (via ODSS API) to then
relay them to any number of configured TethysDash instances,
which in turn will push them to corresponding Dash UI instances
(via websockets).

The Dash4 UI uses the odss2dash API to populate its TrackDB platform dropdown in the Map tab,
where the user can then indicate the desired assets to be included,
and to retrieve and display corresponding recent of positions.
Subsequent asset positions are then asynchronously received by Dash4 via websockets.

More information at <https://docs.mbari.org/tethysdash/odss2dash/>.
"""
repository  = "https://github.com/mbari-org/odss2dash"
license = "Apache-2.0"
edition = "2021"

[dependencies]
anstyle = "1.0.1" # for coloring clap help
clap = { version = "4.3.10", features = ["derive", "unstable-styles"] }
axum = "0.8.1"
dotenv = "0.15.0"
env_logger = "0.11.1"
humantime-serde = "1.1.1"
hyper = { version = "1.1.0", features = ["full"] }
log = "0.4"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.64"
sysinfo = "0.33"
tokio = { version = "1", features = ["full"] }
tower-http = { version = "0.6.2", features = ["cors"] }
toml = "0.8.6"
ureq = { version = "3", features = ["json"] }
utoipa = { version = "5.3.1", features = ["axum_extras"] }
utoipa-rapidoc = { version = "6", features = ["axum"] }
utoipa-swagger-ui = { version = "9", features = ["axum"] }

[dev-dependencies]
axum-test = "17.0.1"
pretty_assertions = "1.4.0"

[profile.release]
## Though not critical at all, we can optimize for size as speed performace
## is not a big concern for this service.
## Via directly running `just build-musl` the results are as follows,
## depending on whether we use the settings below:
##  - without settings:  binary size: 25MB
##  - with the settings: binary size: 16MB
## Corresponding docker image sizes (see docker/Dockerfile) are
##   28MB and 18.3MB, respectively.
#strip = true  ## withouth this, 20MB.
opt-level = "z"
lto = true
codegen-units = 1
